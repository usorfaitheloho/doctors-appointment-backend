---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/users/{user_id}/appointments":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list appointments
      responses:
        '200':
          description: successful
    post:
      summary: create appointment
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: string
                date:
                  type: integer
              required:
              - name
              - city
              - date
  "/api/v1/users/{user_id}/appointments/{id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show appointment
      responses:
        '200':
          description: successful
    patch:
      summary: update appointment
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: string
                date:
                  type: integer
              required:
              - name
              - city
              - date
    put:
      summary: update appointment
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: string
                date:
                  type: integer
              required:
              - name
              - city
              - date
    delete:
      summary: delete appointment
      responses:
        '200':
          description: successful
  "/api/v1/doctors":
    get:
      summary: list doctors
      responses:
        '200':
          description: successful
    post:
      summary: create doctor
      parameters: []
      responses:
        '200':
          description: Doctor added successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                specialization:
                  type: string
                charges:
                  type: integer
                photo:
                  type: string
              required:
              - name
              - specialization
              - charges
              - photo
  "/api/v1/doctors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show doctor
      responses:
        '200':
          description: successful
    patch:
      summary: update doctor
      parameters: []
      responses:
        '200':
          description: Doctor added successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                specialization:
                  type: string
                charges:
                  type: integer
                photo:
                  type: string
              required:
              - name
              - specialization
              - charges
              - photo
    put:
      summary: update doctor
      parameters: []
      responses:
        '200':
          description: Doctor added successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                specialization:
                  type: string
                charges:
                  type: integer
                photo:
                  type: string
              required:
              - name
              - specialization
              - charges
              - photo
    delete:
      summary: delete doctor
      responses:
        '200':
          description: successful
  "/api/users":
    post:
      summary: create registration
      parameters: []
      responses:
        '200':
          description: Sign up successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
  "/api/users/sign_in":
    post:
      summary: create session
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
              required:
              - name
              - password
  "/api/users/sign_out":
    delete:
      summary: delete session
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
